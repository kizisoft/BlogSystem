@model BlogSystem.Web.ViewModels.Comment.CommentInputModel

<div class="create-comment-root">
    @if (User.Identity.IsAuthenticated)
    {
        using (Ajax.BeginForm("Create", "Comment", new { Id = Model.Id },
            new AjaxOptions
            {
                HttpMethod = "Post",
                InsertionMode = InsertionMode.ReplaceWith,
                UpdateTargetId = "comments",
                LoadingElementId = "create-comment-load",
                OnFailure = "showCommentsJsonError"
            }, new { @class = "form-horizontal comments-create clearfix" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                <div class="col-md-12">
                    <label for="input-comment" class="control-label">Leave a Comment</label>
                    @Html.EditorFor(model => model.Content, new { @class = "form-control", id = "input-comment", rows = 5 })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <span id="comment-error" class="text-danger pull-left"></span>
            <button type="submit" id="submit-btn" class="btn btn-success pull-right"><span id="create-comment-load" class="fa fa-spinner fa-pulse loader"></span>Submit</button>
        }
    }
    else
    {
        ﻿<div class="alert alert-danger comments-warning" role="alert">
            <span class="fa fa-exclamation-triangle fa-5x pull-left"></span>
            <p>Only registered users can comment.</p>
            <br />
            @Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink", @class = "btn btn-success btn-xs" })
            @Html.ActionLink("Log in", "Login", "Account", routeValues: new { ReturnUrl = Url.Action("Index", "Blog", new { id = Model.Id }) }, htmlAttributes: new { id = "loginLink", @class = "btn btn-primary btn-xs" })
        </div>
    }
</div>

<script type="text/javascript">
    function showCommentsJsonError(data) {
        $('#comment-error')
            .text(data.responseJSON.ErrorMessage)
            .fadeIn()
            .delay(3000)
            .fadeOut(function () {
                this.innerText = '';
            });
    }
</script>
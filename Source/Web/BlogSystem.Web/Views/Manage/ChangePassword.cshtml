@model BlogSystem.Web.ViewModels.Manage.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<div class="plate page">

    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <h4>Change Password Form</h4>
        <hr />
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-unlock-alt fa-fw"></i></span>
                    @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-key fa-fw"></i></span>
                    @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                <div class="input-group">
                    <span class="input-group-addon"><i class="fa fa-key fa-fw"></i></span>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-12">
                <input type="submit" value="Change password" class="btn btn-success pull-right" />
            </div>
        </div>
        <br />
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}